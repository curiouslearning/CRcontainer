default_platform(:android)

platform :android do
  desc "Build and deploy the app if PR contains 'release'"

  lane :deploy do
    last_commit = sh("git log -1 --pretty=%B").strip
    UI.message("🔍 Last commit message: #{last_commit}")

    if last_commit.downcase.include?("release")
      UI.message("🚀 'release' keyword found in commit. Proceeding with Play Store deploy...")

      gradle(
        task: "bundle",
        build_type: "Release",
        project_dir: "../"
      )

      changelog = sh("git log -5 --pretty=format:'- %s'").strip

      slack(
        message: ":rocket: *Test App successfully deployed to Play Store (Internal Track)*\n\n*Changelog:*\n#{changelog}",
        success: true,
        default_payloads: []
      )
    else
      UI.message("🧪 No 'release' in commit message. Uploading *debug* APK to GitHub...")

        # Step 1: Build Debug APK
        gradle(
          task: "assemble",
          build_type: "Debug",
          project_dir: "../"
        )
        sh("ls -lah ../app/build/outputs/apk/debug/")
        # Step 2: Define paths
        apk_source = "../app/build/outputs/apk/debug/app-debug.apk"
        apk_target = "fastlane/app-debug.apk"

        # Step 3: Copy to fastlane folder
        sh("cp #{apk_source} #{apk_target}")

        # Step 4: Git setup
        sh("git config user.email 'nikhil77@sutara.org'")
        sh("git config user.name 'CLAutomated'")

        # Step 5: Checkout or create a branch
        sh("git checkout -B clautoTest")

        # Step 6: Force add the APK even if it's in .gitignore
        sh("git add -f #{apk_target}")

        # Step 7: Commit and push
        timestamp = Time.now.strftime("%Y-%m-%d %H:%M")
        sh("git commit -m '📦 Debug APK pushed on #{timestamp}'")
        sh("git push origin develop-artifacts --force")

        UI.success("✅ Debug APK pushed to 'develop-artifacts' branch inside 'fastlane/' folder.")
      end
  end
end  # ✅ This was missing!
